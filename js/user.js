document.addEventListener('DOMContentLoaded',()=>{
  const list=document.getElementById('taskList'); const cards=document.getElementById('userCards');
  const searchEl=document.getElementById('search'); const fPriEl=document.getElementById('filterPriority'); const fStatEl=document.getElementById('filterStatus');
  let unsub=null;
  auth.onAuthStateChanged(async (user)=>{ if(!user) return; const email=user.email; if(unsub) unsub(); unsub = tasksCol.where('assignedTo','==', email).orderBy('createdAt','desc').onSnapshot(snap=>render(snap), err=>alert(err.message)); });
  function render(snap){ const arr=snap.docs.map(d=>({id:d.id, ...d.data()})); renderCards(cards, arr); paintList(arr); }
  function paintList(items){ const q=searchEl.value.toLowerCase(); const fp=fPriEl.value; const fs=fStatEl.value; const tasks=items.filter(t=>{ const mQ=t.title.toLowerCase().includes(q)||(t.description||'').toLowerCase().includes(q); const mP=fp==='all'||t.priority===fp; const mS=fs==='all'||t.status===fs; return mQ&&mP&&mS; }); if(tasks.length===0){ list.innerHTML="<li class='muted'>No tasks found.</li>"; return; } list.innerHTML=tasks.map(t=>{ const isDone=t.status==='done'; const isSub=t.status==='submitted'; return `<li class="task ${isDone?'done':''}" data-id="${t.id}"><button class="checkbox" disabled>${isDone?'✓':''}</button><div class="stack"><div class="title">${t.title}</div><div class="meta">${t.deadline?('Due '+new Date(t.deadline).toLocaleDateString()):'No due date'} • <span class="badge ${priorityClass(t.priority)}">${t.priority}</span> • ${t.assignedTo||'Unassigned'} ${badgeFor(t.deadline,isDone)} ${t.status==='open'?'<span class=\'badge status-open\'>open</span>':''} ${t.status==='submitted'?'<span class=\'badge status-submitted\'>submitted</span>':''} ${t.status==='done'?'<span class=\'badge status-done\'>done</span>':''}</div>${t.description?`<p class="muted">${t.description}</p>`:''}</div><div class="row">${(!isDone && !isSub)?'<button class="btn" data-action="submit-done">Mark Finished</button>':''}${(isSub)?'<button class="btn btn-ghost" data-action="undo-submit">Undo Submission</button>':''}</div></li>`; }).join(''); }
  list.addEventListener('click', async (e)=>{ const btn=e.target.closest('button[data-action]'); if(!btn) return; const id=btn.closest('li.task').dataset.id; const ref=tasksCol.doc(id); const snap=await ref.get(); if(!snap.exists) return; if(btn.dataset.action==='submit-done'){ await ref.update({ status:'submitted', updatedAt:new Date() }); } if(btn.dataset.action==='undo-submit'){ await ref.update({ status:'open', updatedAt:new Date() }); } });
  searchEl.addEventListener('input', ()=>auth.currentUser && tasksCol.get().then(()=>{})); fPriEl.addEventListener('change', ()=>auth.currentUser && tasksCol.get().then(()=>{})); fStatEl.addEventListener('change', ()=>auth.currentUser && tasksCol.get().then(()=>{}));
});